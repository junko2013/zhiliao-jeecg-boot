<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.jeecg.modules.im.mapper.MucMemberMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="org.jeecg.modules.im.entity.MucMember">
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="muc_id" property="mucId"/>
        <result column="nickname" property="nickname"/>
        <result column="title" property="title"/>
        <result column="back_img" property="backImg"/>
        <result column="is_msg_archive" property="isMsgArchive"/>
        <result column="ts_msg_visible" property="tsMsgVisible"/>
        <result column="ts_join" property="tsJoin"/>
        <result column="ts_pin" property="tsPin"/>
        <result column="ts_update" property="tsUpdate"/>
        <result column="is_no_disturb" property="isNoDisturb"/>
        <result column="is_hide" property="isHide"/>
        <result column="is_unread" property="isUnread"/>
        <result column="is_read_del" property="isReadDel"/>
        <result column="role" property="role"/>
        <result column="unread_count" property="unreadCount"/>
        <result column="join_type" property="joinType"/>
        <result column="level_id" property="levelId"/>
        <result column="coin" property="coin"/>
        <result column="ts_mute" property="tsMute"/>
        <result column="ts_mute_begin" property="tsMuteBegin"/>
        <result column="mute_type" property="muteType"/>
        <result column="status" property="status"/>
        <result column="kicker" property="kicker"/>
        <result column="ts_quit" property="tsQuit"/>
        <result column="remark" property="remark"/>
        <association property="user" javaType="org.jeecg.modules.im.entity.User">
            <id column="user_id" property="id"/>
            <result column="user_nickname" property="nickname"/>
            <result column="user_account" property="account"/>
            <result column="user_small_avatar" property="smallAvatar"/>
        </association>
        <association property="permission" javaType="org.jeecg.modules.im.entity.MucPermission">
            <id column="p_id" property="id" />
            <result column="p_muc_id" property="mucId" />
            <result column="p_manager_id" property="managerId" />
            <result column="p_modify_info" property="modifyInfo" />
            <result column="p_modify_notice" property="modifyNotice" />
            <result column="p_msg_pin" property="msgPin" />
            <result column="p_add_member" property="addMember" />
            <result column="p_del_member" property="delMember" />
            <result column="p_mute_member" property="muteMember" />
            <result column="p_add_manager" property="addManager" />
            <result column="p_revoke_manager" property="revokeManager" />
            <result column="p_is_validation_tip" property="isValidationTip" />
            <result column="p_is_anonymous" property="isAnonymous" />
        </association>
    </resultMap>
    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, user_id, muc_id, nickname, title,back_img,is_msg_archive,ts_msg_visible, ts_join,ts_update, ts_pin,
        is_no_disturb, is_hide,is_unread,is_read_del,unread_count,role, level_id, coin,ts_mute,ts_mute_begin,mute_type,status,kicker,ts_quit,remark
    </sql>
    <select id="pagination" resultMap="BaseResultMap">
        select m.id, m.nickname,m.user_id, m.title,m.back_img,m.is_msg_archive,ts_msg_visible, m.ts_join, m.ts_pin, m.is_no_disturb,m.is_hide,m.is_unread,m.is_read_del,m.unread_count,m.join_type,
               m.role, m.level_id, m.coin,m.ts_mute,ts_mute_begin,mute_type,m.status,m.kicker,m.ts_quit,remark,
        user.nickname user_nickname,user.account user_account,user.small_avatar user_small_avatar,
        p.id p_id, p.muc_id p_muc_id, p.manager_id p_manager_id, p.modify_info p_modify_info, p.modify_notice p_modify_notice, p.msg_pin p_msg_pin, p.add_member p_add_member, p.del_member p_del_member, p.mute_member p_mute_member, p.add_manager p_add_manager, p.revoke_manager p_revoke_manager, p.is_validation_tip p_is_validation_tip,p.is_anonymous p_is_anonymous
        from im_muc_member m
        left join im_user user on user.id = m.user_id
        left join im_muc_permission p on p.manager_id = m.id
        <where>1=1
            <if test="q.mucId!=null and q.mucId !=''">
                and m.muc_id = #{q.mucId}
            </if>
            <if test="q.userId!=null and q.userId !=''">
                and m.user_id = #{q.userId}
            </if>
            <if test="q.userAccount!=null and q.userAccount !=''">
                and user.account = #{q.userAccount}
            </if>
            <if test="q.tsMute!=null">
                <choose>
                    <when test="q.tsMute==0">
                        and m.ts_mute = #{q.tsMute}
                    </when>
                    <otherwise>
                        and m.ts_mute >= #{q.tsMute}
                    </otherwise>
                </choose>
            </if>
            <if test="q.tsMuteBegin!=null">
                <choose>
                    <when test="q.tsMuteBegin==0">
                        and m.ts_mute_begin = #{q.tsMuteBegin}
                    </when>
                    <otherwise>
                        and m.ts_mute_begin >= #{q.tsMuteBegin}
                    </otherwise>
                </choose>
            </if>
            <if test="q.muteType!=null">
                and m.mute_type = #{q.muteType}
            </if>
            <if test="q.role!=null">
                and m.role = #{q.role}
            </if>
            <if test="q.tsCreate!=null">
                and m.ts_create &lt;= UNIX_TIMESTAMP(#{q.tsCreate})*1000
            </if>
        </where>
        <if test="q.column !=null and q.column!='' and q.order!=null and q.order!=''">
            order by ${q.column} ${q.order}
        </if>
    </select>

    <select id="findByMucIdOfUser" resultMap="BaseResultMap">
        select m.id, m.nickname,m.user_id,m.muc_id, m.title,m.back_img,m.is_msg_archive,ts_msg_visible, m.ts_join, m.ts_pin, m.is_no_disturb,m.is_hide,m.is_unread,m.is_read_del,m.unread_count,m.join_type,
           m.role, m.level_id, m.coin,m.ts_mute,m.ts_mute_begin,m.mute_type,m.status,m.kicker,m.ts_quit,remark,
           user.nickname user_nickname,user.small_avatar user_small_avatar,
           p.id p_id, p.muc_id p_muc_id, p.manager_id p_manager_id, p.modify_info p_modify_info, p.modify_notice p_modify_notice, p.msg_pin p_msg_pin, p.add_member p_add_member, p.del_member p_del_member, p.mute_member p_mute_member, p.add_manager p_add_manager, p.revoke_manager p_revoke_manager, p.is_validation_tip p_is_validation_tip,p.is_anonymous p_is_anonymous
        from im_muc_member m
         left join im_user user on m.user_id = user.id
        left join im_muc_permission p on p.manager_id = m.id
         where m.muc_id = #{mucId} and user_id = #{userId}
    </select>
    <select id="findById" resultMap="BaseResultMap">
        select m.id, m.nickname,m.user_id,m.muc_id,m.title, m.back_img,m.is_msg_archive,ts_msg_visible, m.ts_join, m.ts_pin, m.is_no_disturb,m.is_hide,m.is_unread,m.is_read_del,m.unread_count,m.join_type,
           m.role, m.level_id, m.coin,m.ts_mute,m.ts_mute_begin,m.mute_type,m.status,m.kicker,m.ts_quit,remark,
           user.nickname user_nickname,user.small_avatar user_small_avatar
        from im_muc_member m
         left join im_user user on m.user_id = user.id
        where m.id = #{id}
    </select>

    <select id="pageApi" resultMap="BaseResultMap">
        select m.id, m.nickname,m.user_id,m.muc_id,m.title, m.back_img,m.is_msg_archive,ts_msg_visible, m.ts_join, m.ts_pin, m.is_no_disturb,m.is_hide,m.is_unread,m.is_read_del,m.unread_count,m.join_type,
        m.role, m.level_id, m.coin,m.ts_mute,m.ts_mute_begin,m.mute_type,m.status,m.kicker,m.ts_quit,remark,
       user.nickname user_nickname,user.small_avatar user_small_avatar,
        p.id p_id, p.muc_id p_muc_id, p.manager_id p_manager_id, p.modify_info p_modify_info, p.modify_notice p_modify_notice, p.msg_pin p_msg_pin, p.add_member p_add_member, p.del_member p_del_member, p.mute_member p_mute_member, p.add_manager p_add_manager, p.revoke_manager p_revoke_manager, p.is_validation_tip p_is_validation_tip,p.is_anonymous p_is_anonymous
        from im_muc_member m
        left join im_user user on m.user_id = user.id
        left join im_muc_permission p on p.manager_id = m.id
        <where>
            m.muc_id = #{q.mucId} and m.status=#{q.status}
        </where>
        order by role desc,ts_join desc,user.is_online desc
    </select>

    <select id="getCount" resultType="java.lang.Integer">
        select count(id) from im_muc_member where muc_id = #{mucId} and status = #{status}
    </select>
    <select id="findAll" resultMap="BaseResultMap">
        select m.id, m.nickname,m.user_id,m.muc_id,m.title, m.back_img,m.is_msg_archive,ts_msg_visible, m.ts_join, m.ts_pin, m.is_no_disturb,m.is_hide,m.is_unread,m.is_read_del,m.unread_count,m.join_type,
               m.role, m.level_id, m.coin,m.ts_mute,m.ts_mute_begin,m.mute_type,m.status,m.kicker,m.ts_quit,remark,
               user.nickname user_nickname,user.small_avatar user_small_avatar,
               p.id p_id, p.muc_id p_muc_id, p.manager_id p_manager_id, p.modify_info p_modify_info, p.modify_notice p_modify_notice, p.msg_pin p_msg_pin, p.add_member p_add_member, p.del_member p_del_member, p.mute_member p_mute_member, p.add_manager p_add_manager, p.revoke_manager p_revoke_manager, p.is_validation_tip p_is_validation_tip,p.is_anonymous p_is_anonymous
        from im_muc_member m
         left join im_user user on m.user_id = user.id
            left join im_muc_permission p on p.manager_id = m.id
         where m.muc_id = #{mucId} and status = #{status}
    </select>
    <select id="findMine" resultMap="BaseResultMap">
        select m.id, m.nickname,m.user_id,m.muc_id,m.title, m.back_img,m.is_msg_archive,ts_msg_visible, m.ts_join, m.ts_pin, m.is_no_disturb,m.is_hide,m.is_unread,m.is_read_del,m.unread_count,m.join_type,
        m.role, m.level_id, m.coin,m.ts_mute,m.ts_mute_begin,m.mute_type,m.status,m.kicker,m.ts_quit,remark,
        user.nickname user_nickname,user.small_avatar user_small_avatar,
        p.id p_id, p.muc_id p_muc_id, p.manager_id p_manager_id, p.modify_info p_modify_info, p.modify_notice p_modify_notice, p.msg_pin p_msg_pin, p.add_member p_add_member, p.del_member p_del_member, p.mute_member p_mute_member, p.add_manager p_add_manager, p.revoke_manager p_revoke_manager, p.is_validation_tip p_is_validation_tip,p.is_anonymous p_is_anonymous
        from im_muc_member m
        left join im_user user on m.user_id = user.id where m.user_id = #{userId}
        left join im_muc_permission p on p.manager_id = m.id
        <if test="status != null">
            and status = #{status}
        </if>
    </select>

    <update id="updateTsVisible">
        update im_muc_member set ts_msg_visible = #{tsVisible} where muc_id = #{mucId} and user_id = #{userId}
    </update>

</mapper>
