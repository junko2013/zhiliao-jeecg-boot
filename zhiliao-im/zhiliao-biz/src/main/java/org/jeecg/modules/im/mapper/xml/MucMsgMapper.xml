<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.jeecg.modules.im.mapper.MucMsgMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="org.jeecg.modules.im.entity.MucMsg">
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="muc_id" property="mucId"/>
        <result column="type" property="type"/>
        <result column="stanza_id" property="stanzaId"/>
        <result column="reply_stanza_id" property="replyStanzaId"/>
        <result column="content" property="content"/>
        <result column="is_encrypt" property="isEncrypt"/>
        <result column="is_spam" property="isSpam"/>
        <result column="is_send" property="isSend"/>
        <result column="ts_pin" property="tsPin"/>
        <result column="ts_send" property="tsSend"/>
        <result column="ts_received" property="tsReceived"/>
        <result column="ts_archived" property="tsArchived"/>
        <result column="ts_delete" property="tsDelete"/>
        <result column="read_count" property="readCount"/>
        <result column="ts_revoke" property="tsRevoke"/>
        <result column="revoker_id" property="revokerId"/>
        <result column="is_read_del" property="isReadDel"/>
        <result column="delete_user_ids" property="deleteUserIds"/>
        <result column="revoke_type" property="revokeType"/>
        <result column="server_id" property="serverId"/>
        <association property="sender" javaType="org.jeecg.modules.im.entity.MucMember">
            <id column="sender_id" property="id"/>
            <result column="sender_nickname" property="nickname"/>
            <association property="user" javaType="org.jeecg.modules.im.entity.User">
                <id column="user_id" property="id"/>
                <result column="user_nickname" property="nickname"/>
                <result column="user_account" property="account"/>
                <result column="user_small_avatar" property="smallAvatar"/>
                <result column="user_is_online" property="isOnline"/>
                <result column="user_ts_create" property="tsCreate"/>
                <association property="info" javaType="org.jeecg.modules.im.entity.UserInfo">
                    <id column="fi_id" property="id" />
                    <result column="fi_province" property="province" />
                    <result column="fi_city" property="city" />
                    <result column="fi_district" property="district" />
                    <result column="fi_country" property="country" />
                    <result column="fi_gender" property="gender" />
                </association>
            </association>
        </association>
        <association property="muc" javaType="org.jeecg.modules.im.entity.Muc">
            <id column="muc_id" property="id"/>
            <result column="muc_name" property="name"/>
            <result column="muc_info" property="info"/>
            <result column="muc_small_avatar" property="smallAvatar"/>
        </association>
    </resultMap>
    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, user_id, muc_id, type, stanza_id,reply_stanza_id, content,is_encrypt,ts_send,ts_received,ts_archived,ts_pin,ts_delete,is_spam,read_count,ts_revoke,revoker_id,is_read_del,revoke_type
    </sql>

    <select id="pagination" resultMap="BaseResultMap">
        select
            m.id,m.content,stanza_id,m.reply_stanza_id,m.type,m.is_encrypt,m.is_spam,m.ts_send,m.ts_received,m.ts_archived,m.ts_pin,m.read_count,m.ts_delete,
            r.id muc_id,r.name muc_name,r.info muc_info,r.small_avatar muc_small_avatar,
            sender.id sender_id,sender.nickname sender_nickname,
            user.id user_id,user.nickname user_nickname,user.account user_account,user.small_avatar user_small_avatar,user.is_online user_is_online,user.ts_create user_ts_create,
            fi.id fi_id,fi.province fi_province,fi.city fi_city,fi.country fi_country,fi.district fi_district,fi.gender fi_gender
        from im_muc_msg m
        left join im_muc r on r.id = m.muc_id
        left join im_user user on user.id = m.user_id
        left join im_user_info fi on fi.user_id = user.id
        left join im_muc_member sender on sender.user_id = user.id and m.muc_id = sender.muc_id
        <where>1=1
            <choose>
                <when test="q.isDelete!=null and q.isDelete==true">
                    and m.ts_delete >0
                </when>
                <otherwise>
                    and m.ts_delete = 0
                </otherwise>
            </choose>
            <if test="q.content!=null and q.content!=''">
                and m.content like concat("%",#{q.content},"%")
            </if>
            <if test="q.type!=null and q.type !=''">
                and m.type = #{q.type}
            </if>
            <if test="q.isSpam!=null">
                and m.is_spam = #{q.isSpam}
            </if>
            <choose>
                <when test="q.isTop!=null and q.isTop==true">
                    and m.ts_pin >0
                </when>
                <otherwise>
                    and m.ts_pin = 0
                </otherwise>
            </choose>
            <if test="q.mucId!=null and q.mucId!=''">
                and m.muc_id = #{q.mucId}
            </if>
            <if test="q.sendStartTime!=null and q.sendStartTime!=''">
                and ts_send &gt;= #{q.sendStartTime}
            </if>
            <if test="q.sendEndTime!=null and q.sendEndTime!=''">
                and ts_send &lt;= #{q.sendEndTime}
            </if>
            <if test="q.s!=null and q.s !=''">
                and (sender.nickname like concat("%",#{q.s},"%") or user.account = #{q.s} or user.mobile = #{q.s} or user.username = #{q.s} or user.id = #{q.s})
            </if>
            <if test="q.r!=null and q.r !=''">
                and (r.name = #{q.r} or r.id = #{q.r})
            </if>
            <if test="q.tsSend!=null">
                and m.ts_send &lt;= UNIX_TIMESTAMP(#{q.tsSend})*1000
            </if>
            <if test="q.serverId!=null">
                and m.server_id = #{q.serverId}
            </if>
        </where>
        <if test="q.column !=null and q.column!='' and q.order!=null and q.order!=''">
            order by ${q.column} ${q.order}
        </if>
    </select>

    <select id="pageApi" resultMap="BaseResultMap">
        SELECT a.*, GROUP_CONCAT(d.user_id SEPARATOR ',') AS delete_user_ids
        FROM (
            SELECT
            IF(m.user_id = #{q.userId}, true, false) AS is_send,
            m.id, m.content, m.muc_id, stanza_id, m.reply_stanza_id, m.type,
            m.is_encrypt, m.is_spam, m.ts_send,m.ts_received,m.ts_archived, m.ts_pin, m.read_count, m.is_read_del,
            m.revoke_type, m.ts_revoke,
            sender.id AS sender_id, sender.nickname AS sender_nickname,
            user.id AS user_id, user.nickname AS user_nickname, user.small_avatar AS user_smallAvatar
            FROM im_muc_msg m
            LEFT JOIN im_user user ON user.id = m.user_id
            LEFT JOIN im_muc_member sender ON sender.user_id = user.id AND m.muc_id = sender.muc_id
            LEFT JOIN im_muc_msg_delete d ON m.id = d.msg_id AND d.user_id = #{q.userId}
            <where>
                m.muc_id = #{q.mucId} and m.ts_delete = 0 AND d.msg_id IS NULL
                <if test="q.tsSend!=null and q.tsSend!=''">
                    <choose>
                        <when test="q.after==false">
                            and m.ts_send &lt; #{q.tsSend}
                        </when>
                        <otherwise>
                            and m.ts_send &gt;= #{q.tsSend}
                        </otherwise>
                    </choose>
                </if>
            </where>
            ORDER BY m.ts_send DESC
            LIMIT #{q.pageSize}
        ) a
        LEFT JOIN im_muc_msg_delete d ON a.id = d.msg_id
        GROUP BY a.id
        ORDER BY a.ts_send DESC

    </select>

    <select id="findByStanzaId" resultMap="BaseResultMap">
        select * from im_muc_msg where stanza_id = #{stanzaId}
    </select>
    <update id="deleteLogic">
        update im_muc_msg set ts_delete = #{tsDelete} where ts_delete = 0 and muc_id = #{mucId}
    </update>

    <update id="updateTsReceive">
        update im_muc_msg set ts_received = #{ts} where stanza_id = #{stanzaId}
    </update>
</mapper>
